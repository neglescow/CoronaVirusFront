{"remainingRequest":"C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\src\\components\\ListaPacientes.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\src\\components\\ListaPacientes.vue","mtime":1592409169821},{"path":"C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\AlairPires\\Desktop\\VisualCode\\DevWebII\\devwebii-covid-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBhY2llbnRlV1MgZnJvbSAiLi4vc2VydmljZXMvUGFjaWVudGVzV1MiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImxpc3RhclBhY2llbnRlcyIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBhY2llbnRlczogW10sCiAgICAgIGN1cnJlbnRJbmRleDogLTEsCiAgICAgIGN1cnJlbnRQYWNpZW50ZTogbnVsbCwKICAgICAgbm9tZTogIiIKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKm9idGVyUGFjaWVudGVzKCkgew0KICAgICAgUGFjaWVudGVXUy5nZXRBbGwoKQ0KICAgICAgICAudGhlbihwYWNpZW50ZXMgPT4gew0KICAgICAgICAgIHRoaXMucGFjaWVudGVzID0gcGFjaWVudGVzLmRhdGE7DQogICAgICAgICAgY29uc29sZS5sb2codGhpcy5wYWNpZW50ZXMpOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goZXJyb3IgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpOw0KICAgICAgICB9KTsNCiAgICB9LCovCiAgICByZWZyZXNoUGFjaWVudGVzOiBmdW5jdGlvbiByZWZyZXNoUGFjaWVudGVzKCkgewogICAgICB0aGlzLm9idGVyUGFjaWVudGVzKCk7CiAgICAgIHRoaXMuY3VycmVudFBhY2llbnRlID0gbnVsbDsKICAgICAgdGhpcy5jdXJyZW50SW5kZXggPSAtMTsKICAgIH0sCiAgICBzZWxlY2lvbmFyUGFjaWVudGU6IGZ1bmN0aW9uIHNlbGVjaW9uYXJQYWNpZW50ZShwYWNpZW50ZSwgaW5kZXgpIHsKICAgICAgdGhpcy5jdXJyZW50UGFjaWVudGUgPSBwYWNpZW50ZTsKICAgICAgdGhpcy5jdXJyZW50SW5kZXggPSBpbmRleDsKICAgIH0KICAgIC8qcmVtb3ZlclRvZG9zUGFjaWVudGVzKCkgew0KICAgICAgUGFjaWVudGVXUy5kZWxldGFyVG9kb3NQYWNpZW50ZXMoKQ0KICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7DQogICAgICAgICAgdGhpcy5yZWZyZXNoUGFjaWVudGVzKCk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaChlcnJvciA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IubWVzc2FnZSk7DQogICAgICAgIH0pOw0KICAgIH0qLwoKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLm9idGVyUGFjaWVudGVzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["ListaPacientes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA,OAAA,UAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,YAAA,EAAA,CAAA,CAFA;AAGA,MAAA,eAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,OAAA,EAAA;AACA;;;;;;;;;;AAUA,IAAA,gBAXA,8BAWA;AACA,WAAA,cAAA;AACA,WAAA,eAAA,GAAA,IAAA;AACA,WAAA,YAAA,GAAA,CAAA,CAAA;AACA,KAfA;AAgBA,IAAA,kBAhBA,8BAgBA,QAhBA,EAgBA,KAhBA,EAgBA;AACA,WAAA,eAAA,GAAA,QAAA;AACA,WAAA,YAAA,GAAA,KAAA;AACA;AACA;;;;;;;;;;;AApBA,GAVA;AAyCA,EAAA,OAzCA,qBAyCA;AACA,SAAA,cAAA;AACA;AA3CA,CAAA","sourcesContent":["<!-- ESTRUTURA -->\r\n\r\n<template>\r\n  <table class=\"container table-striped\">\r\n    <thead>\r\n      <tr>\r\n        <th>\r\n          <h1>ID</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Nome</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Endereço</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Telefone</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Peso</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Altura</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Idade</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Complicações</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Obesidade</h1>\r\n        </th>\r\n        <th>\r\n          <h1>Idoso</h1>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody\r\n      :class=\"{ active: index == currentIndex }\"\r\n      v-for=\"(paciente, index) in pacientes\"\r\n      :key=\"index\"\r\n    >\r\n      <tr>\r\n        <td class=\"id\"><a class=\"tagID\" :href=\"'pacientes/' + paciente.id\" data-toggle=\"modal\">{{ paciente.id }}</a></td>\r\n        <td>{{ paciente.nome }}</td>\r\n        <td style=\"width: 200px\">{{ paciente.endereco }}</td>\r\n        <td>{{ paciente.telefone }}</td>\r\n        <td>{{ paciente.peso }}</td>\r\n        <td>{{ paciente.altura }}</td>\r\n        <td>{{ paciente.idade }}</td>\r\n        <td>{{ paciente.prob_saude }}</td>\r\n        <td>{{ paciente.obesidade }}</td>\r\n        <td>{{ paciente.idoso }}</td>\r\n      </tr>\r\n    </tbody>\r\n    </table>\r\n</template>\r\n\r\n<!-- COMPORTAMENTO -->\r\n\r\n<script>\r\nimport PacienteWS from \"../services/PacientesWS\";\r\n\r\nexport default {\r\n  name: \"listarPacientes\",\r\n  data() {\r\n    return {\r\n      pacientes: [],\r\n      currentIndex: -1,\r\n      currentPaciente: null,\r\n      nome: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    /*obterPacientes() {\r\n      PacienteWS.getAll()\r\n        .then(pacientes => {\r\n          this.pacientes = pacientes.data;\r\n          console.log(this.pacientes);\r\n        })\r\n        .catch(error => {\r\n          console.log(error.message);\r\n        });\r\n    },*/\r\n    refreshPacientes() {\r\n      this.obterPacientes();\r\n      this.currentPaciente = null;\r\n      this.currentIndex = -1;\r\n    },\r\n    selecionarPaciente(paciente, index) {\r\n      this.currentPaciente = paciente;\r\n      this.currentIndex = index;\r\n    },\r\n    /*removerTodosPacientes() {\r\n      PacienteWS.deletarTodosPacientes()\r\n        .then(response => {\r\n          console.log(response.data);\r\n          this.refreshPacientes();\r\n        })\r\n        .catch(error => {\r\n          console.log(error.message);\r\n        });\r\n    }*/\r\n  },\r\n  mounted() {\r\n    this.obterPacientes();\r\n  }\r\n};\r\n</script>\r\n\r\n<!-- ESTILIZAÇÃO -->\r\n\r\n<style>\r\n.list {\r\n  text-align: left;\r\n  max-width: 750px;\r\n  margin: auto;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}